name: Build and Push Docker Image to GHCR

permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up JDK 17 (Using Temurin distribution)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Build the project using Maven (create JAR file)
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Step 5: Verify the target directory (Debugging Step)
      - name: Verify target directory
        run: ls -l target

      # Step 6: List build context for Docker (Debugging Step)
      - name: List build context
        run: |
          ls -l
          ls -l target

      # Step 7: Log in to GitHub Container Registry using Personal Access Token (PAT)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      # Step 8: Build Docker image
      - name: Build Docker image
        run: docker build -t ghcr.io/${{ github.repository_owner }}/hello-api:latest .

      # Step 9: Push Docker image to GHCR
      - name: Push Docker image to GHCR
        run: docker push ghcr.io/${{ github.repository_owner }}/hello-api:latest
